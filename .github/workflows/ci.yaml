name: Continuous integration

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  ci:
    name: CI
    uses: Skycoder42/dart_test_tools/.github/workflows/dart.yml@main
    with:
      buildRunner: true
      unitTestPaths: -P unit
      coverageExclude: >-
        "**/*.freezed.dart"
        "**/*.g.dart"
      integrationTestPaths: -P integration
      integrationTestSetup: >-
        {
          "linux": "./tool/integration-test-setup.sh"
        }

  cd:
    name: CD
    needs:
      - ci
    uses: Skycoder42/dart_test_tools/.github/workflows/compile.yml@main
    permissions:
      contents: write
    with:
      buildRunner: true

  aur:
    name: AUR
    needs:
      - cd
    if: needs.cd.outputs.releaseCreated == 'true'
    uses: Skycoder42/dart_test_tools/.github/workflows/aur.yml@main
    secrets:
      AUR_SSH_PRIVATE_KEY: ${{ secrets.AUR_SSH_PRIVATE_KEY }}

  deb:
    name: Deb
    needs:
      - cd
    if: needs.cd.outputs.releaseCreated == 'true'
    uses: Skycoder42/dart_test_tools/.github/workflows/deb.yml@main
    permissions:
      contents: write
    with:
      version: ${{ needs.cd.outputs.releaseVersion }}

  package_cloud:
    name: Upload to package cloud
    needs:
      - cd
      - deb
    if: needs.cd.outputs.releaseCreated == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Download debian package from release
        run: >-
          curl -fL
          -o 'podman_backup_${{ needs.cd.outputs.releaseVersion }}-1_amd64.deb'
          'https://github.com/Skycoder42/podman_backup/releases/download/v${{ needs.cd.outputs.releaseVersion }}/podman_backup_${{ needs.cd.outputs.releaseVersion }}-1_amd64.deb'
      - name: Deploy to packagecloud.io
        uses: lpenz/ghaction-packagecloud@v0.4
        with:
          repository: podman_backup/ubuntu/jammy
          files: podman_backup_${{ needs.cd.outputs.releaseVersion }}-1_amd64.deb
        env:
          PACKAGECLOUD_TOKEN: ${{ secrets.PACKAGECLOUD_TOKEN }}
